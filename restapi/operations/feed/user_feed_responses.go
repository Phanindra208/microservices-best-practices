// Code generated by go-swagger; DO NOT EDIT.

package feed

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/iAmPlus/microservice/models/apimodels"
)

// UserFeedOKCode is the HTTP code returned for type UserFeedOK
const UserFeedOKCode int = 200

/*UserFeedOK Successfully user feed

swagger:response userFeedOK
*/
type UserFeedOK struct {

	/*
	  In: Body
	*/
	Payload *apimodels.UsersFeed `json:"body,omitempty"`
}

// NewUserFeedOK creates UserFeedOK with default headers values
func NewUserFeedOK() *UserFeedOK {

	return &UserFeedOK{}
}

// WithPayload adds the payload to the user feed o k response
func (o *UserFeedOK) WithPayload(payload *apimodels.UsersFeed) *UserFeedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user feed o k response
func (o *UserFeedOK) SetPayload(payload *apimodels.UsersFeed) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserFeedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserFeedBadRequestCode is the HTTP code returned for type UserFeedBadRequest
const UserFeedBadRequestCode int = 400

/*UserFeedBadRequest Bad request <br>


swagger:response userFeedBadRequest
*/
type UserFeedBadRequest struct {

	/*
	  In: Body
	*/
	Payload *apimodels.ErrorResponse `json:"body,omitempty"`
}

// NewUserFeedBadRequest creates UserFeedBadRequest with default headers values
func NewUserFeedBadRequest() *UserFeedBadRequest {

	return &UserFeedBadRequest{}
}

// WithPayload adds the payload to the user feed bad request response
func (o *UserFeedBadRequest) WithPayload(payload *apimodels.ErrorResponse) *UserFeedBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user feed bad request response
func (o *UserFeedBadRequest) SetPayload(payload *apimodels.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserFeedBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserFeedUnauthorizedCode is the HTTP code returned for type UserFeedUnauthorized
const UserFeedUnauthorizedCode int = 401

/*UserFeedUnauthorized Unauthorized

swagger:response userFeedUnauthorized
*/
type UserFeedUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *apimodels.ErrorResponse `json:"body,omitempty"`
}

// NewUserFeedUnauthorized creates UserFeedUnauthorized with default headers values
func NewUserFeedUnauthorized() *UserFeedUnauthorized {

	return &UserFeedUnauthorized{}
}

// WithPayload adds the payload to the user feed unauthorized response
func (o *UserFeedUnauthorized) WithPayload(payload *apimodels.ErrorResponse) *UserFeedUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user feed unauthorized response
func (o *UserFeedUnauthorized) SetPayload(payload *apimodels.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserFeedUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserFeedInternalServerErrorCode is the HTTP code returned for type UserFeedInternalServerError
const UserFeedInternalServerErrorCode int = 500

/*UserFeedInternalServerError Internal error

swagger:response userFeedInternalServerError
*/
type UserFeedInternalServerError struct {
}

// NewUserFeedInternalServerError creates UserFeedInternalServerError with default headers values
func NewUserFeedInternalServerError() *UserFeedInternalServerError {

	return &UserFeedInternalServerError{}
}

// WriteResponse to the client
func (o *UserFeedInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(500)
}
