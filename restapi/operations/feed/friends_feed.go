// Code generated by go-swagger; DO NOT EDIT.

package feed

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// FriendsFeedHandlerFunc turns a function with the right signature into a friends feed handler
type FriendsFeedHandlerFunc func(FriendsFeedParams) middleware.Responder

// Handle executing the request and returning a response
func (fn FriendsFeedHandlerFunc) Handle(params FriendsFeedParams) middleware.Responder {
	return fn(params)
}

// FriendsFeedHandler interface for that can handle valid friends feed params
type FriendsFeedHandler interface {
	Handle(FriendsFeedParams) middleware.Responder
}

// NewFriendsFeed creates a new http.Handler for the friends feed operation
func NewFriendsFeed(ctx *middleware.Context, handler FriendsFeedHandler) *FriendsFeed {
	return &FriendsFeed{Context: ctx, Handler: handler}
}

/*FriendsFeed swagger:route POST /friends-feed feed friendsFeed

friends feed

Friends Feed

*/
type FriendsFeed struct {
	Context *middleware.Context
	Handler FriendsFeedHandler
}

func (o *FriendsFeed) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewFriendsFeedParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
